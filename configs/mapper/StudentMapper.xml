<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ums.dao.StudentMapper">
  <resultMap id="BaseResultMap" type="com.ums.bean.Student">
    <id column="stu_id" jdbcType="BIGINT" property="stuId" />
    <id column="course_id" jdbcType="BIGINT" property="courseId" />
    <id column="teacher_id" jdbcType="BIGINT" property="teacherId" />
    <result column="room_id" jdbcType="BIGINT" property="roomId" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    stu_id, course_id, teacher_id, room_id, parent_id, create_time
  </sql>
  <select id="selectByExample" parameterType="com.ums.bean.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.ums.bean.StudentKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where stu_id = #{stuId,jdbcType=BIGINT}
      and course_id = #{courseId,jdbcType=BIGINT}
      and teacher_id = #{teacherId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.ums.bean.StudentKey">
    delete from student
    where stu_id = #{stuId,jdbcType=BIGINT}
      and course_id = #{courseId,jdbcType=BIGINT}
      and teacher_id = #{teacherId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ums.bean.StudentExample">
    delete from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ums.bean.Student">
    insert into student (stu_id, course_id, teacher_id, 
      room_id, parent_id, create_time
      )
    values (#{stuId,jdbcType=BIGINT}, #{courseId,jdbcType=BIGINT}, #{teacherId,jdbcType=BIGINT}, 
      #{roomId,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, #{createTime,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ums.bean.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stuId != null">
        stu_id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="roomId != null">
        room_id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stuId != null">
        #{stuId,jdbcType=BIGINT},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=BIGINT},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=BIGINT},
      </if>
      <if test="roomId != null">
        #{roomId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ums.bean.StudentExample" resultType="java.lang.Long">
    select count(*) from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student
    <set>
      <if test="record.stuId != null">
        stu_id = #{record.stuId,jdbcType=BIGINT},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=BIGINT},
      </if>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=BIGINT},
      </if>
      <if test="record.roomId != null">
        room_id = #{record.roomId,jdbcType=BIGINT},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student
    set stu_id = #{record.stuId,jdbcType=BIGINT},
      course_id = #{record.courseId,jdbcType=BIGINT},
      teacher_id = #{record.teacherId,jdbcType=BIGINT},
      room_id = #{record.roomId,jdbcType=BIGINT},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ums.bean.Student">
    update student
    <set>
      <if test="roomId != null">
        room_id = #{roomId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
    </set>
    where stu_id = #{stuId,jdbcType=BIGINT}
      and course_id = #{courseId,jdbcType=BIGINT}
      and teacher_id = #{teacherId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ums.bean.Student">
    update student
    set room_id = #{roomId,jdbcType=BIGINT},
      parent_id = #{parentId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=VARCHAR}
    where stu_id = #{stuId,jdbcType=BIGINT}
      and course_id = #{courseId,jdbcType=BIGINT}
      and teacher_id = #{teacherId,jdbcType=BIGINT}
  </update>
</mapper>