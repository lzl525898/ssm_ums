<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ums.dao.OfflineCourseMapper">
  <resultMap id="BaseResultMap" type="com.ums.bean.OfflineCourse">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="cName" jdbcType="VARCHAR" property="cname" />
    <result column="cType_id" jdbcType="BIGINT" property="ctypeId" />
    <result column="cTime" jdbcType="VARCHAR" property="ctime" />
    <result column="cPrice" jdbcType="VARCHAR" property="cprice" />
    <result column="cPriceAfter" jdbcType="VARCHAR" property="cpriceafter" />
    <result column="cPicPath" jdbcType="VARCHAR" property="cpicpath" />
    <result column="cCreateTime" jdbcType="VARCHAR" property="ccreatetime" />
    <result column="cCity" jdbcType="VARCHAR" property="ccity" />
    <result column="cIntro" jdbcType="VARCHAR" property="cintro" />
    <result column="fitPeople" jdbcType="VARCHAR" property="fitpeople" />
    <result column="cStatus" jdbcType="INTEGER" property="cstatus" />
    <result column="nextTime" jdbcType="VARCHAR" property="nexttime" />
    <result column="classPlace" jdbcType="VARCHAR" property="classplace" />
    <result column="hours" jdbcType="INTEGER" property="hours" />
    <result column="learnHours" jdbcType="INTEGER" property="learnhours" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ums.bean.OfflineCourseWithBLOBs">
    <result column="cDesc" jdbcType="LONGVARCHAR" property="cdesc" />
    <result column="cDetailNotice" jdbcType="LONGVARCHAR" property="cdetailnotice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, cName, cType_id, cTime, cPrice, cPriceAfter, cPicPath, cCreateTime, cCity, cIntro, 
    fitPeople, cStatus, nextTime, classPlace, hours, learnHours
  </sql>
  <sql id="Blob_Column_List">
    cDesc, cDetailNotice
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.ums.bean.OfflineCourseExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from offline_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.ums.bean.OfflineCourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from offline_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from offline_course
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from offline_course
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ums.bean.OfflineCourseExample">
    delete from offline_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ums.bean.OfflineCourseWithBLOBs">
    insert into offline_course (id, cName, cType_id, 
      cTime, cPrice, cPriceAfter, 
      cPicPath, cCreateTime, cCity, 
      cIntro, fitPeople, cStatus, 
      nextTime, classPlace, hours, 
      learnHours, cDesc, cDetailNotice
      )
    values (#{id,jdbcType=BIGINT}, #{cname,jdbcType=VARCHAR}, #{ctypeId,jdbcType=BIGINT}, 
      #{ctime,jdbcType=VARCHAR}, #{cprice,jdbcType=VARCHAR}, #{cpriceafter,jdbcType=VARCHAR}, 
      #{cpicpath,jdbcType=VARCHAR}, #{ccreatetime,jdbcType=VARCHAR}, #{ccity,jdbcType=VARCHAR}, 
      #{cintro,jdbcType=VARCHAR}, #{fitpeople,jdbcType=VARCHAR}, #{cstatus,jdbcType=INTEGER}, 
      #{nexttime,jdbcType=VARCHAR}, #{classplace,jdbcType=VARCHAR}, #{hours,jdbcType=INTEGER}, 
      #{learnhours,jdbcType=INTEGER}, #{cdesc,jdbcType=LONGVARCHAR}, #{cdetailnotice,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ums.bean.OfflineCourseWithBLOBs">
    insert into offline_course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="cname != null">
        cName,
      </if>
      <if test="ctypeId != null">
        cType_id,
      </if>
      <if test="ctime != null">
        cTime,
      </if>
      <if test="cprice != null">
        cPrice,
      </if>
      <if test="cpriceafter != null">
        cPriceAfter,
      </if>
      <if test="cpicpath != null">
        cPicPath,
      </if>
      <if test="ccreatetime != null">
        cCreateTime,
      </if>
      <if test="ccity != null">
        cCity,
      </if>
      <if test="cintro != null">
        cIntro,
      </if>
      <if test="fitpeople != null">
        fitPeople,
      </if>
      <if test="cstatus != null">
        cStatus,
      </if>
      <if test="nexttime != null">
        nextTime,
      </if>
      <if test="classplace != null">
        classPlace,
      </if>
      <if test="hours != null">
        hours,
      </if>
      <if test="learnhours != null">
        learnHours,
      </if>
      <if test="cdesc != null">
        cDesc,
      </if>
      <if test="cdetailnotice != null">
        cDetailNotice,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="cname != null">
        #{cname,jdbcType=VARCHAR},
      </if>
      <if test="ctypeId != null">
        #{ctypeId,jdbcType=BIGINT},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=VARCHAR},
      </if>
      <if test="cprice != null">
        #{cprice,jdbcType=VARCHAR},
      </if>
      <if test="cpriceafter != null">
        #{cpriceafter,jdbcType=VARCHAR},
      </if>
      <if test="cpicpath != null">
        #{cpicpath,jdbcType=VARCHAR},
      </if>
      <if test="ccreatetime != null">
        #{ccreatetime,jdbcType=VARCHAR},
      </if>
      <if test="ccity != null">
        #{ccity,jdbcType=VARCHAR},
      </if>
      <if test="cintro != null">
        #{cintro,jdbcType=VARCHAR},
      </if>
      <if test="fitpeople != null">
        #{fitpeople,jdbcType=VARCHAR},
      </if>
      <if test="cstatus != null">
        #{cstatus,jdbcType=INTEGER},
      </if>
      <if test="nexttime != null">
        #{nexttime,jdbcType=VARCHAR},
      </if>
      <if test="classplace != null">
        #{classplace,jdbcType=VARCHAR},
      </if>
      <if test="hours != null">
        #{hours,jdbcType=INTEGER},
      </if>
      <if test="learnhours != null">
        #{learnhours,jdbcType=INTEGER},
      </if>
      <if test="cdesc != null">
        #{cdesc,jdbcType=LONGVARCHAR},
      </if>
      <if test="cdetailnotice != null">
        #{cdetailnotice,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ums.bean.OfflineCourseExample" resultType="java.lang.Long">
    select count(*) from offline_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update offline_course
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.cname != null">
        cName = #{record.cname,jdbcType=VARCHAR},
      </if>
      <if test="record.ctypeId != null">
        cType_id = #{record.ctypeId,jdbcType=BIGINT},
      </if>
      <if test="record.ctime != null">
        cTime = #{record.ctime,jdbcType=VARCHAR},
      </if>
      <if test="record.cprice != null">
        cPrice = #{record.cprice,jdbcType=VARCHAR},
      </if>
      <if test="record.cpriceafter != null">
        cPriceAfter = #{record.cpriceafter,jdbcType=VARCHAR},
      </if>
      <if test="record.cpicpath != null">
        cPicPath = #{record.cpicpath,jdbcType=VARCHAR},
      </if>
      <if test="record.ccreatetime != null">
        cCreateTime = #{record.ccreatetime,jdbcType=VARCHAR},
      </if>
      <if test="record.ccity != null">
        cCity = #{record.ccity,jdbcType=VARCHAR},
      </if>
      <if test="record.cintro != null">
        cIntro = #{record.cintro,jdbcType=VARCHAR},
      </if>
      <if test="record.fitpeople != null">
        fitPeople = #{record.fitpeople,jdbcType=VARCHAR},
      </if>
      <if test="record.cstatus != null">
        cStatus = #{record.cstatus,jdbcType=INTEGER},
      </if>
      <if test="record.nexttime != null">
        nextTime = #{record.nexttime,jdbcType=VARCHAR},
      </if>
      <if test="record.classplace != null">
        classPlace = #{record.classplace,jdbcType=VARCHAR},
      </if>
      <if test="record.hours != null">
        hours = #{record.hours,jdbcType=INTEGER},
      </if>
      <if test="record.learnhours != null">
        learnHours = #{record.learnhours,jdbcType=INTEGER},
      </if>
      <if test="record.cdesc != null">
        cDesc = #{record.cdesc,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.cdetailnotice != null">
        cDetailNotice = #{record.cdetailnotice,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update offline_course
    set id = #{record.id,jdbcType=BIGINT},
      cName = #{record.cname,jdbcType=VARCHAR},
      cType_id = #{record.ctypeId,jdbcType=BIGINT},
      cTime = #{record.ctime,jdbcType=VARCHAR},
      cPrice = #{record.cprice,jdbcType=VARCHAR},
      cPriceAfter = #{record.cpriceafter,jdbcType=VARCHAR},
      cPicPath = #{record.cpicpath,jdbcType=VARCHAR},
      cCreateTime = #{record.ccreatetime,jdbcType=VARCHAR},
      cCity = #{record.ccity,jdbcType=VARCHAR},
      cIntro = #{record.cintro,jdbcType=VARCHAR},
      fitPeople = #{record.fitpeople,jdbcType=VARCHAR},
      cStatus = #{record.cstatus,jdbcType=INTEGER},
      nextTime = #{record.nexttime,jdbcType=VARCHAR},
      classPlace = #{record.classplace,jdbcType=VARCHAR},
      hours = #{record.hours,jdbcType=INTEGER},
      learnHours = #{record.learnhours,jdbcType=INTEGER},
      cDesc = #{record.cdesc,jdbcType=LONGVARCHAR},
      cDetailNotice = #{record.cdetailnotice,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update offline_course
    set id = #{record.id,jdbcType=BIGINT},
      cName = #{record.cname,jdbcType=VARCHAR},
      cType_id = #{record.ctypeId,jdbcType=BIGINT},
      cTime = #{record.ctime,jdbcType=VARCHAR},
      cPrice = #{record.cprice,jdbcType=VARCHAR},
      cPriceAfter = #{record.cpriceafter,jdbcType=VARCHAR},
      cPicPath = #{record.cpicpath,jdbcType=VARCHAR},
      cCreateTime = #{record.ccreatetime,jdbcType=VARCHAR},
      cCity = #{record.ccity,jdbcType=VARCHAR},
      cIntro = #{record.cintro,jdbcType=VARCHAR},
      fitPeople = #{record.fitpeople,jdbcType=VARCHAR},
      cStatus = #{record.cstatus,jdbcType=INTEGER},
      nextTime = #{record.nexttime,jdbcType=VARCHAR},
      classPlace = #{record.classplace,jdbcType=VARCHAR},
      hours = #{record.hours,jdbcType=INTEGER},
      learnHours = #{record.learnhours,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ums.bean.OfflineCourseWithBLOBs">
    update offline_course
    <set>
      <if test="cname != null">
        cName = #{cname,jdbcType=VARCHAR},
      </if>
      <if test="ctypeId != null">
        cType_id = #{ctypeId,jdbcType=BIGINT},
      </if>
      <if test="ctime != null">
        cTime = #{ctime,jdbcType=VARCHAR},
      </if>
      <if test="cprice != null">
        cPrice = #{cprice,jdbcType=VARCHAR},
      </if>
      <if test="cpriceafter != null">
        cPriceAfter = #{cpriceafter,jdbcType=VARCHAR},
      </if>
      <if test="cpicpath != null">
        cPicPath = #{cpicpath,jdbcType=VARCHAR},
      </if>
      <if test="ccreatetime != null">
        cCreateTime = #{ccreatetime,jdbcType=VARCHAR},
      </if>
      <if test="ccity != null">
        cCity = #{ccity,jdbcType=VARCHAR},
      </if>
      <if test="cintro != null">
        cIntro = #{cintro,jdbcType=VARCHAR},
      </if>
      <if test="fitpeople != null">
        fitPeople = #{fitpeople,jdbcType=VARCHAR},
      </if>
      <if test="cstatus != null">
        cStatus = #{cstatus,jdbcType=INTEGER},
      </if>
      <if test="nexttime != null">
        nextTime = #{nexttime,jdbcType=VARCHAR},
      </if>
      <if test="classplace != null">
        classPlace = #{classplace,jdbcType=VARCHAR},
      </if>
      <if test="hours != null">
        hours = #{hours,jdbcType=INTEGER},
      </if>
      <if test="learnhours != null">
        learnHours = #{learnhours,jdbcType=INTEGER},
      </if>
      <if test="cdesc != null">
        cDesc = #{cdesc,jdbcType=LONGVARCHAR},
      </if>
      <if test="cdetailnotice != null">
        cDetailNotice = #{cdetailnotice,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ums.bean.OfflineCourseWithBLOBs">
    update offline_course
    set cName = #{cname,jdbcType=VARCHAR},
      cType_id = #{ctypeId,jdbcType=BIGINT},
      cTime = #{ctime,jdbcType=VARCHAR},
      cPrice = #{cprice,jdbcType=VARCHAR},
      cPriceAfter = #{cpriceafter,jdbcType=VARCHAR},
      cPicPath = #{cpicpath,jdbcType=VARCHAR},
      cCreateTime = #{ccreatetime,jdbcType=VARCHAR},
      cCity = #{ccity,jdbcType=VARCHAR},
      cIntro = #{cintro,jdbcType=VARCHAR},
      fitPeople = #{fitpeople,jdbcType=VARCHAR},
      cStatus = #{cstatus,jdbcType=INTEGER},
      nextTime = #{nexttime,jdbcType=VARCHAR},
      classPlace = #{classplace,jdbcType=VARCHAR},
      hours = #{hours,jdbcType=INTEGER},
      learnHours = #{learnhours,jdbcType=INTEGER},
      cDesc = #{cdesc,jdbcType=LONGVARCHAR},
      cDetailNotice = #{cdetailnotice,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ums.bean.OfflineCourse">
    update offline_course
    set cName = #{cname,jdbcType=VARCHAR},
      cType_id = #{ctypeId,jdbcType=BIGINT},
      cTime = #{ctime,jdbcType=VARCHAR},
      cPrice = #{cprice,jdbcType=VARCHAR},
      cPriceAfter = #{cpriceafter,jdbcType=VARCHAR},
      cPicPath = #{cpicpath,jdbcType=VARCHAR},
      cCreateTime = #{ccreatetime,jdbcType=VARCHAR},
      cCity = #{ccity,jdbcType=VARCHAR},
      cIntro = #{cintro,jdbcType=VARCHAR},
      fitPeople = #{fitpeople,jdbcType=VARCHAR},
      cStatus = #{cstatus,jdbcType=INTEGER},
      nextTime = #{nexttime,jdbcType=VARCHAR},
      classPlace = #{classplace,jdbcType=VARCHAR},
      hours = #{hours,jdbcType=INTEGER},
      learnHours = #{learnhours,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>