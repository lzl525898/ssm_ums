<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ums.dao.ExamResultMapper">
  <resultMap id="BaseResultMap" type="com.ums.bean.ExamResult">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="userId" jdbcType="BIGINT" property="userid" />
    <result column="courseId" jdbcType="BIGINT" property="courseid" />
    <result column="menuId" jdbcType="BIGINT" property="menuid" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="rightNum" jdbcType="INTEGER" property="rightnum" />
    <result column="time" jdbcType="VARCHAR" property="time" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ums.bean.ExamResult">
    <result column="result" jdbcType="LONGVARCHAR" property="result" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userId, courseId, menuId, score, rightNum, time
  </sql>
  <sql id="Blob_Column_List">
    result
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.ums.bean.ExamResultExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from exam_result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.ums.bean.ExamResultExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exam_result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from exam_result
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from exam_result
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ums.bean.ExamResultExample">
    delete from exam_result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ums.bean.ExamResult">
    insert into exam_result (id, userId, courseId, 
      menuId, score, rightNum, 
      time, result)
    values (#{id,jdbcType=BIGINT}, #{userid,jdbcType=BIGINT}, #{courseid,jdbcType=BIGINT}, 
      #{menuid,jdbcType=BIGINT}, #{score,jdbcType=INTEGER}, #{rightnum,jdbcType=INTEGER}, 
      #{time,jdbcType=VARCHAR}, #{result,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ums.bean.ExamResult">
    insert into exam_result
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="courseid != null">
        courseId,
      </if>
      <if test="menuid != null">
        menuId,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="rightnum != null">
        rightNum,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="result != null">
        result,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="courseid != null">
        #{courseid,jdbcType=BIGINT},
      </if>
      <if test="menuid != null">
        #{menuid,jdbcType=BIGINT},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="rightnum != null">
        #{rightnum,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        #{result,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ums.bean.ExamResultExample" resultType="java.lang.Long">
    select count(*) from exam_result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update exam_result
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=BIGINT},
      </if>
      <if test="record.courseid != null">
        courseId = #{record.courseid,jdbcType=BIGINT},
      </if>
      <if test="record.menuid != null">
        menuId = #{record.menuid,jdbcType=BIGINT},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.rightnum != null">
        rightNum = #{record.rightnum,jdbcType=INTEGER},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=VARCHAR},
      </if>
      <if test="record.result != null">
        result = #{record.result,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update exam_result
    set id = #{record.id,jdbcType=BIGINT},
      userId = #{record.userid,jdbcType=BIGINT},
      courseId = #{record.courseid,jdbcType=BIGINT},
      menuId = #{record.menuid,jdbcType=BIGINT},
      score = #{record.score,jdbcType=INTEGER},
      rightNum = #{record.rightnum,jdbcType=INTEGER},
      time = #{record.time,jdbcType=VARCHAR},
      result = #{record.result,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update exam_result
    set id = #{record.id,jdbcType=BIGINT},
      userId = #{record.userid,jdbcType=BIGINT},
      courseId = #{record.courseid,jdbcType=BIGINT},
      menuId = #{record.menuid,jdbcType=BIGINT},
      score = #{record.score,jdbcType=INTEGER},
      rightNum = #{record.rightnum,jdbcType=INTEGER},
      time = #{record.time,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ums.bean.ExamResult">
    update exam_result
    <set>
      <if test="userid != null">
        userId = #{userid,jdbcType=BIGINT},
      </if>
      <if test="courseid != null">
        courseId = #{courseid,jdbcType=BIGINT},
      </if>
      <if test="menuid != null">
        menuId = #{menuid,jdbcType=BIGINT},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="rightnum != null">
        rightNum = #{rightnum,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        result = #{result,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ums.bean.ExamResult">
    update exam_result
    set userId = #{userid,jdbcType=BIGINT},
      courseId = #{courseid,jdbcType=BIGINT},
      menuId = #{menuid,jdbcType=BIGINT},
      score = #{score,jdbcType=INTEGER},
      rightNum = #{rightnum,jdbcType=INTEGER},
      time = #{time,jdbcType=VARCHAR},
      result = #{result,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ums.bean.ExamResult">
    update exam_result
    set userId = #{userid,jdbcType=BIGINT},
      courseId = #{courseid,jdbcType=BIGINT},
      menuId = #{menuid,jdbcType=BIGINT},
      score = #{score,jdbcType=INTEGER},
      rightNum = #{rightnum,jdbcType=INTEGER},
      time = #{time,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>