<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ums.dao.LogsMapper">
  <resultMap id="BaseResultMap" type="com.ums.bean.Logs">
    <id column="log_id" jdbcType="BIGINT" property="logId" />
    <result column="log_type" jdbcType="CHAR" property="logType" />
    <result column="log_title" jdbcType="VARCHAR" property="logTitle" />
    <result column="log_date" jdbcType="VARCHAR" property="logDate" />
    <result column="log_status" jdbcType="CHAR" property="logStatus" />
    <result column="log_category" jdbcType="VARCHAR" property="logCategory" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ums.bean.Logs">
    <result column="log_info" jdbcType="LONGVARCHAR" property="logInfo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    log_id, log_type, log_title, log_date, log_status, log_category
  </sql>
  <sql id="Blob_Column_List">
    log_info
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.ums.bean.LogsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from logs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.ums.bean.LogsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from logs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from logs
    where log_id = #{logId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from logs
    where log_id = #{logId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ums.bean.LogsExample">
    delete from logs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ums.bean.Logs">
    insert into logs (log_id, log_type, log_title, 
      log_date, log_status, log_category, 
      log_info)
    values (#{logId,jdbcType=BIGINT}, #{logType,jdbcType=CHAR}, #{logTitle,jdbcType=VARCHAR}, 
      #{logDate,jdbcType=VARCHAR}, #{logStatus,jdbcType=CHAR}, #{logCategory,jdbcType=VARCHAR}, 
      #{logInfo,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ums.bean.Logs">
    insert into logs
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        log_id,
      </if>
      <if test="logType != null">
        log_type,
      </if>
      <if test="logTitle != null">
        log_title,
      </if>
      <if test="logDate != null">
        log_date,
      </if>
      <if test="logStatus != null">
        log_status,
      </if>
      <if test="logCategory != null">
        log_category,
      </if>
      <if test="logInfo != null">
        log_info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        #{logId,jdbcType=BIGINT},
      </if>
      <if test="logType != null">
        #{logType,jdbcType=CHAR},
      </if>
      <if test="logTitle != null">
        #{logTitle,jdbcType=VARCHAR},
      </if>
      <if test="logDate != null">
        #{logDate,jdbcType=VARCHAR},
      </if>
      <if test="logStatus != null">
        #{logStatus,jdbcType=CHAR},
      </if>
      <if test="logCategory != null">
        #{logCategory,jdbcType=VARCHAR},
      </if>
      <if test="logInfo != null">
        #{logInfo,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ums.bean.LogsExample" resultType="java.lang.Long">
    select count(*) from logs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update logs
    <set>
      <if test="record.logId != null">
        log_id = #{record.logId,jdbcType=BIGINT},
      </if>
      <if test="record.logType != null">
        log_type = #{record.logType,jdbcType=CHAR},
      </if>
      <if test="record.logTitle != null">
        log_title = #{record.logTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.logDate != null">
        log_date = #{record.logDate,jdbcType=VARCHAR},
      </if>
      <if test="record.logStatus != null">
        log_status = #{record.logStatus,jdbcType=CHAR},
      </if>
      <if test="record.logCategory != null">
        log_category = #{record.logCategory,jdbcType=VARCHAR},
      </if>
      <if test="record.logInfo != null">
        log_info = #{record.logInfo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update logs
    set log_id = #{record.logId,jdbcType=BIGINT},
      log_type = #{record.logType,jdbcType=CHAR},
      log_title = #{record.logTitle,jdbcType=VARCHAR},
      log_date = #{record.logDate,jdbcType=VARCHAR},
      log_status = #{record.logStatus,jdbcType=CHAR},
      log_category = #{record.logCategory,jdbcType=VARCHAR},
      log_info = #{record.logInfo,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update logs
    set log_id = #{record.logId,jdbcType=BIGINT},
      log_type = #{record.logType,jdbcType=CHAR},
      log_title = #{record.logTitle,jdbcType=VARCHAR},
      log_date = #{record.logDate,jdbcType=VARCHAR},
      log_status = #{record.logStatus,jdbcType=CHAR},
      log_category = #{record.logCategory,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ums.bean.Logs">
    update logs
    <set>
      <if test="logType != null">
        log_type = #{logType,jdbcType=CHAR},
      </if>
      <if test="logTitle != null">
        log_title = #{logTitle,jdbcType=VARCHAR},
      </if>
      <if test="logDate != null">
        log_date = #{logDate,jdbcType=VARCHAR},
      </if>
      <if test="logStatus != null">
        log_status = #{logStatus,jdbcType=CHAR},
      </if>
      <if test="logCategory != null">
        log_category = #{logCategory,jdbcType=VARCHAR},
      </if>
      <if test="logInfo != null">
        log_info = #{logInfo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where log_id = #{logId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ums.bean.Logs">
    update logs
    set log_type = #{logType,jdbcType=CHAR},
      log_title = #{logTitle,jdbcType=VARCHAR},
      log_date = #{logDate,jdbcType=VARCHAR},
      log_status = #{logStatus,jdbcType=CHAR},
      log_category = #{logCategory,jdbcType=VARCHAR},
      log_info = #{logInfo,jdbcType=LONGVARCHAR}
    where log_id = #{logId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ums.bean.Logs">
    update logs
    set log_type = #{logType,jdbcType=CHAR},
      log_title = #{logTitle,jdbcType=VARCHAR},
      log_date = #{logDate,jdbcType=VARCHAR},
      log_status = #{logStatus,jdbcType=CHAR},
      log_category = #{logCategory,jdbcType=VARCHAR}
    where log_id = #{logId,jdbcType=BIGINT}
  </update>
</mapper>